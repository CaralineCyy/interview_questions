###试题大纲###

一、专业技术前端：
HTML&CSS：
    对Web标准的理解、浏览器内核差异、兼容性、hack、CSS基本功：布局、盒子模型、选择器优先级及使用、HTML5、CSS3、移动端适应
JavaScript：  
    数据类型、面向对象、继承、闭包、插件、作用域、跨域、原型链、模块化、自定义事件、内存泄漏、事件机制、异步装载回调、模板引擎、Nodejs、JSON、ajax等。
其他：
   HTTP、安全、正则、优化、重构、响应式、移动端、团队协作、可维护、SEO、UED、架构、职业生涯

二、大后端技术面试：
PHP：
	语法，函数库，框架，开源，测试，配置，优化，扩展，调试
数据库：
	SQL语句，配置，引擎，索引，优化，慢查询，主从备份，缓存，NOSQL
Linux：
	常用命令，服务管理，shell, 
服务器：
	Nginx, 配置，优化，虚拟主机，代理，负载均衡
编程：
	代码规范，设计模式，代码优化，重构，模块，分层，安全
算法：
	数据结构，
网络：
	HTTP，TCP/IP，长轮询，WEB SOCKET, DNS, CDN, 状态码，RESTAPI
软件工程：
	开发模式，团队协作，任务分配，项目管理，产品原型，用户体验，持续集成
工具：
	抓包，思维导图，版本控制


专业前端
1. ajax的请求是同步异步选项怎么设置？同步和异步有什么区别？
	async([əˈsɪŋk])：要求为Boolean类型的参数，默认设置为true，所有请求均为异步请求。如果需要发送同步请求，请将此选项设置为false。注意，同步请求将锁住浏览器，用户其他操作必须等待请求完成才可以执行。异步时，就是说当ajax发送请求后，在等待server端返回的这个过程中，前台会继续 执行ajax块后面的脚本，直到server端返回正确的结果才会去执行success，也就是说这时候执行的是两个线程，ajax块发出请求后一个线程 和ajax块后面的脚本（另一个线程）

2. 你做的页面在哪些浏览器测试过？这些浏览器的内核分别是什么?
	IE(ie,Trident(['traɪdnt])内核),
	FireFox(Gecko(['gɛko])内核),
	Chrome(Webkit内核)

3. 你如何对网站的文件和资源进行优化？ 
	(1)文件顺序：css文件放最前面，js文件放最后面，不要使用内嵌的样式(style属性)
	(2)文件合并:减少发送请求的次数
	(3)文件最小化/文件压缩:对css/js文件进行压缩
	(4)使用CDN托管:CDN的全称是Content Delivery 
		Network，即内容分发网络。其基本思路是尽可能避开互联网上有可能影
		响数据传输速度和稳定性的瓶颈和环节，使内容传输的更快、更稳定。通过在网络各处放置节点服务器所构成的在现有的互联网基础之上的一层智能虚拟网络，CDN系统能够实时地根据网络流量和各节点的连接、负载状况以及到用户的距离和响应时间等综合信息将用户的请求重新导向离用户最近的服务节点上。其目的是使用户可就近取得所需内容，解决 Internet网络拥挤的状况，提高用户访问网站的响应速度。
	(5)缓存的使用:服务器对静态资源进行过期配置，浏览器缓存静态资源

4. 引入css样式有那几种写法？
	(1)外联式样式表；(添加在html的<head>标签里面，用<link>标签)
	(2)内嵌样式表；(添加在html的<head>标签里面,写在<style>标签里面的样式)
	(3)元素内定；(标签内部，以style属性的方式呈现)
	(4)导入样式表(<style type=”text/css”>
						<!–
					@import url(“css/base.css”);
						–>
					</style>)

5. 你了解哪些js库？你用过其中的哪些？这些之间有什么区别？
	Jquery, (单向数据绑定) 
	AngularJS(指令系统,双向数据绑定)走MVC，当M数据变化时，V即时变化  
	extjs
	requirejs
	Dojo
	reactjs

6. ajax是否可以跨域访问数据，如何解决跨域访问？
	ajax跨站请求,浏览器的同源策略(出于安全考虑)（协议，IP，端口只要有一个不一样，都是不同源的）
	ajax可以实现跨域访问数据,(JsonP,Proxy代理,CORS(跨域资源共享))
	Cookie中的同源只关注域名，忽略协议和端口。所以https://localhost:8080/和http://localhost:8081/的Cookie是共享的。

7. 谈谈你对闭包的理解，闭包的好处和坏处；


8. 介绍CSS盒模型


9. js怎么实现定时功能？js刷新页面有哪些方法？


10. 主流的浏览器有哪些？内核都是什么？


11. 说说你用过的前端开发工具有哪些？
	sublimeText
	firebug


12. 前端页面有哪三层构成，分别是什么？作用是什么？
	M:Model
	V:View
	C:Control

13. 谈谈你对SEO的理解。
 	SEO(搜索引擎优化):

14. HTML5有哪些新增的属性？


15. <img>标签上title与alt属性的区别是什么？
	title:信息提示
	alt:当图片无法显示(找不到)时，用文字对图片说明

16. eval是做什么的？

后端
1. 对于Web性能优化，您有哪些了解和经验吗？
	对于web性能优化，可以从这几个方面入手：
	(1)配置文件，mysql.ini,php.ini,服务器nginx.conf等配置文件
	(2)前端资源的处理，css文件，放在前面，js文件放在后面。尽量的合并css,js文件。不要采用元素内定的方式给元素写样式。css,js文件要进行压缩。
	(3)数据方面，可以做读写分离，负载均衡。
	(4)具体到数据库语句方面，排序字段用索引，可以不用like关键词的地方，不要使用like关键词等
	(5)程序逻辑方面，尽量避免，大数据的循环，多层循环等耗性能，耗时间的编程方式。
	(6)使用缓存memcached, redis

2. MVC路由理解？
	Module,View,Control
	Module:数据来源
	Control:数据逻辑处理，与分配
	View:数据展示
	主要是：控制器从模型中获取数据，然后进行相关业务逻辑处理，将其展示给前端视图的过程

3. 谈谈你觉得做的不错系统，大概介绍下用到了哪些技术？？？
	技术：jquery库, 单点登录(统一验证登录)，highchart图形库，第三方登录(QQ登录),session共享

4. Js继承实现。

5. 谈谈你对设计模式的认识？结合你用得最多的一种设计模式说说它的使用
	设计模式主要有创建型，结构型，行为型3大类别，23种设计模式。
	常用有：单例模式, 工厂方法模式，适配器模式，策略模式。
	见解：设计模型主要是对象关系组织的参考，在使用时我们需要根据项目大小，业务需求进行合理运用，不盲目推崇。

6. Http协议
	主要：
	1XX 请求的信息提示。
	2XX 消息响应成功
	3XX 重定向
	4XX 客户端请求错误
	5XX 服务器端错误
    
    常见：200 响应成功 301永久移动 302临时移动 304未修改 401未授权 403禁止访问 404未找到 500服务器错误 503服务器响应超时 

	状态码，tcp/ip协议通信的三次握手，请求头，响应头信息。

7. 数据库优化经验
	1. 数据库配置是否最优，每次调整一个参数进行测试，记录慢查询日志
	2. 建表结构是否合理：包括使用的表引擎，字段，索引，存储过程
	3. 考虑对表使用：水平分隔，垂直分隔，使用汇总表
    4. 使用读写分离，负载均衡的方式，来缓解数据库的压力
    5. 使用内存缓存（redis,memcached），将一部分数据放入内存，减少查询
    6. 其他的还有：优化sql查询代码，将网页前端静态化，减少查询等

	当数据库访问量很大时，已经明显影响到网站的响应，这个时候，我们可以使用读写分离，负载均衡的方式，来缓解数据库的压力。优化数据库的配置，mysql.ini配置文件。

8. 关于代码优化你怎么理解？你会考虑去代码重构吗？
	关于代码优化这一点我觉得是要分几方面的:
	(1)代码规范(包括变量名，类名，方法名，命名的时候，一定要仔细斟酌，做到看到名字，就大概知道这个方法，函数，变量，是干什么的)，代码缩进，代码空行(关联紧密的放在一起)
	(2)注释。(注释要做到刚刚好，表述清晰，简洁)，在代码逻辑修改时，要注意更新注释。注释要刚刚好(过多的注释，没有注释，个人觉得代码的可读性可能不会很好。除非你的代码已经完全可以表述你比所有的思想，这个时候，注释是可以不要的(但就我自己目前来说，还没有达到那样的水平))
	(3)重构。(遵循DRY原则(不要重复你自己))
	前面两项，是在我们写代码的过程中，都要时时注意的，最后一个，可能是在当我们的代码量达到一定的程度，才可以解决的问题。但也同样要求我们，在每一阶段都要去思考这个问题，一旦闻到代码中的坏味道，就要立马进行解决，不能给自己拖延解决的借口。  

9. 网站优化：网站运行慢，如何定位问题？发现问题如何解决？
	首先要找到网站的瓶颈，即找到问题的根本。大致的思路是：
	(1)前端(排查是不是带宽问题，js,css,图片加载是否是瓶颈)--》
	   如果是前端问题，可以加缓存，压缩js,css,css放在前面，js放在后面
	(2)侦测PHP执行速度(这一步可以把问题更加精准的定位到数据库层面上去)--》
	   如果是php程序的问题，那可能就比较麻烦，要进行数据库逻辑的推敲，逐步去优化代码
	(3)检查是否是数据库瓶颈
	   如果是数据库的问题，则首先优化数据库的配置，达到配置最优，然后，数据库中如果还有可以优化的语句，也要进行优化，达到最优。如果问题还是不能解决，我们可以用多台数据库服务器，读写分离，主从备份，负载均衡。

10.说说你最擅长的技术？并说说你是如何使用的？

11.session与cookie的联系和区别（运行机制），session共享问题解决方法
	因为http是无状态的连接，所以它们都是为http连接状态使用的方案
	session:保存在服务器端,session是通过cookie来工作的，如果cookie禁止了，也可以通过url中传session_id
	cookie：保存在客户端,cookie不是很安全。很多浏览器都限制一个站点最多保存20个cookie.php的cookie与session之间是通过$_COOKIE['PHPSESSID']来联系的。

12.php中输出函数有哪些？有什么区别？
	echo '2222';(可以同时输出多个字符串，可以多个参数，并不需要圆括号 ，无返回值。)
	print_r();(只用于输出数组)
	var_dump();(可以用来输出任何内容,输出变量的容，类型或字符串的内容，类型，长度。常用来调试)
	printf();格式化输出
	sprintf();(把输出内容存放在变量中,此并不能直接输出,先赋给一个变量，然后再输出变量)
	var_export ();(返回关于传递给该函数的变量的结构信息，它和var_dump()类似，不同的是其返回的表 示是合法的PHP代码。您可以通过将函数的第二个参数设置为TRUE ，从而返回变量的值。)


13.PHP怎么调试代码？
	(1)通过输出函数
	(2)浏览器输出
	(3)XDebug+IDE
	(4)FirePHP

14.heredoc怎么用？
	php 中的 heredoc技术是php用来引用字符串的一种方式。在phpwind中巧妙的运用了这个技术，实现了逻辑代码和界面设计的分离。语法：  
	(1). 使用操作符  “<<<”
	(2). 操作符后紧跟标识符（开始标识符），之后重起新的一行 输入要引用的字符串，可以包含变量。
	(3). 新的一行，顶格写结束表示符，以分号结束。位于开始标记和结束标记之间的变量可以被正常解析，但是函数则不可以。在heredoc中，变量不需要用连接符.或,来拼接.

15.写一个函数输出该文件夹下文件及其子目录下的文件
	public function get_all_files($dir_path) {
		//$dir_path = 'G:\\';
		//共享变量，每次都追加，而不是覆盖
		static $all_file_path = array();
		//检查这个目录变量是否为空
		if (!empty($dir_path)) {
			//列出指定路径中的文件和目录（返回的是一个array）
			$tmp_dirs = scandir($dir_path);
			//print_r($tmp_dirs);
			//循环遍历这个文件夹下的子文件
			foreach ($tmp_dirs as $tmp_dir) {
				//Array ( [0] => . [1] => .. [2] => 1.txt [3] => 222.txt [4] => 3 )因为用scandir($dir_path)返回的数组中会有这两个，所有要去除这两个
				if ($tmp_dir != '.' && $tmp_dir != '..') {
					
					$tmp_file_path = $dir_path . "/" . $tmp_dir; //echo $tmp_file_path."<br>";
					//如果这个子文件还是一个目录，则迭代查询它里面的子文件
					if (is_dir($tmp_file_path)) {
						$this->get_all_files($tmp_file_path);
					} else {
						//把获取到的文件的绝对路径给到共享变量中存起来
						$all_file_path[] = $tmp_file_path;
					}
				}
			}
			return $all_file_path;
		}
	}

16.PHP如何对变量进行json编码,及对json是数据解码?有中文字符怎么办？
	(1)json_encode($data);  (编码)
	(2)json_decode($data, true);(解码)

	有中文：如果php>5.3， json_encode($data, JSON_UNESCAPED_UNICODE)
			否则：$tmp = url_encode($data); json_encode($tmp);
	(3)iconv进行编码转化(字符串按要求的字符编码来转换);

17.说出PHP处理数组常用的5个函数
	foreach,for(循环处理数组)
	range()  快速创建数组
	array_push()  数组中追加数据，不过也可以直接赋值，这个常用语一次性追加多个值
	sort()  一维索引排序，安ASCII码从小到大升序
	asort()  对数组排序，保持索引关系，用于关联数组排序
	ksort(),krsort()  安索引值排序
	shuffle()  随机混乱排序
	array_rand()  随机抽取
	array_combine()  数组联合
	array_merge()   数组合并
	array_key_exists()，in_array()，array_sum()，arry_unique()，key()
	current(),next(),prev(),end()这个是操作指针的，尽管不常用，但是很多笔试题有
	is_array()，count(),aizeof()

18.说出PHP处理字符串常用的5个函数
	(1)查找字符位置函数
	strpos($str,search,[int]):查找search在$str中的第一次位置从int开始；
	stripos($str,search,[int]):函数返回字符串在另一个字符串中第一次出现的位置。该函数对大小写不敏感
	strrpos($str,search,[int]):查找search在$str中的最后一次出现的位置从int开始
	strripos($str,search,[int]):同上，该函数对大小写不敏感
	(2)提取子字符串函数（双字节）
	substr($str,int start[,int length]):从$str中strat位置开始提取[length长度的字符串]。
	strstr($str1,$str2):从$str1(第一个的位置)搜索$str2并从它开始截取到结束字符串;若没有则返回FALSE。
	stristr() 功能同strstr，只是不区分大小写。
	strrchr() 从最后一次搜索到的字符处返回；用处：取路径中文件名
	(3)替换字符串的PHP字符串函数
	str_replace(search,replace,$str):从$str中查找search用replace来替换
	str_ireplace(search,replace,$str):同上，该函数对大小写不敏感
	strtr($str,search,replace):这个函数中replace不能为"";
	(4)字符长度
	int strlen($str);
	(5)比较字符函数
	int strcmp($str1,$str2):$str1>=<$str2分别为正1,0,-1（字符串比较）
	strcasecmp() 同上（不分大小写）
	strnatcmp("4","14") 按自然排序比较字符串
	strnatcasecmp() 同上，（不区分大小写）
	(6)分割成数组的PHP字符串函数
	str_split($str,len):把$str按len长度进行分割返回数组
	split(search,$str[,int]):把$str按search字符进行分割返回数组int是分割几次，后面的将不分割
	explode(search,$str[,int])把$str按search字符进行分割返回数组int是分割几次，后面的将不分割
	substr_replace($Str,$rep,$start[,length]):$str原始字符串,$rep替换后的新字符串,$start起始位置,$length替换的长度，该项可选
	(7)去除空格
	ltrim()、rtrim()、trim()
	(8)加空格函数
	chunk_split($str,2):向$str字符里面按2个字符就加入一个空格；
	(9)html代码相关函数
	htmlspecialchars($str[,参数]):页面正常输出HTML代码参数，是转换方式
	(10)字符串大小写以及反转
	strrev  反转字符串
	strtolower($str): 字符串转换为小写
	strtoupper($str): 字符串转换为大写
	ucfirst($str): 将函数的第一个字符转换为大写
	ucwords($str): 将每个单词的首字母转换为大写
	addslashes($str)：使str内单引号（'）、双引号（"）、反斜线（\）与 NULL字符串转换为\',\",\\。
	stripslashes(): 去除字符串中的反斜杠
	magic_quotes_gpc = On :自动对 get，post，cookie的内容进行转义
	get_magic_quotes_gpc（）:检测是否打开magic_quotes_gpc

19.PHP的魔法函数，魔法变量有哪些？
	魔法函数：
	__construct();
	__destruct();
	__call();
	__callStatic();
	__get();
	__set();
	__isset(); 
	__unset();
	__sleep();
	__wakeup();
	__toString();
	__invoke();
	__set_state(); 
	__clone(); 
	__autoload();
	魔法常量：
	__LINE__
	__FILE__
	__DIR__
	__FUNCTION__
	__CLASS__
	__TRAIT__
	__METHOD__
	__NAMESPACE__

20.PHP缓存技术有哪些？
	(1)数据缓存(数据库查询缓存)
	每次访问页面的时候,都会先检测相应的缓存数据是否存在，如果不存在，就连接数据库，得到数据，并把查询结果序列化后保存到文件中，以后同样的查询结果就直接从缓存表或文件中获得。(Discuz的搜索功能)
	(2)页面缓存
	每次访问页面的时候，都会先检测相应的缓存页面文件是否存在，如果不存在，就连接数据库，得到数据，显示页面并同时生成缓存页面文件，这样下次访问的时候页面文件就发挥作用了。(模板引擎和网上常见的一些缓存类通常有此功能)。
	(3)时间触发缓存
	检查文件是否存在并且时间戳小于设置的过期时间,如果文件修改的时间戳比当前时间戳减去过期时间戳大，那么就用缓存，否则更新缓存。
	(4)内容触发缓存
	当插入数据或更新数据时，强制更新缓存。
	(5)静态缓存
	这里所说的静态缓存是指静态化，直接生成HTML或XML等文本文件，有更新的时候重生成一次，适合于不太变化的页面，这就不说了。
	以上内容是代码级的解决方案，我直接CP别的框架，也懒得改，内容都差不多，很容易就做到，而且会几种方式一起用，但下面的内容是服务器端的缓存方案，非代码级的，要有多方的合作才能做到。
	(6)内存缓存
	Memcached,Redis,Mongodb 
	(7)PHP的缓冲器、加速器
	有eaccelerator， apc， phpa，xcache，这个这个就不说了吧，搜索一堆一堆的，自己看啦，知道有这玩意就OK。
	(8)MYSQL缓存
	修改mysql.ini配置文件,这也算非代码级的，经典的数据库就是用的这种方式，看下面的运行时间，0.09xxx之类的
	我贴段根据蓝色那家伙修改后部分my.ini吧，2G的MYISAM表可以在0.05S左右
	(9)基于反向代理的Web缓存
	如Nginx，SQUID，mod_proxy(apache2以上又分为mod_proxy和mod_cache)
	(10)DNS轮询
		说简单点就是多服务器啦，把同一个页面或文件缓存到不同的服务器上，按南北自动解析到相关的服务器中。

21.php.ini 中safe mod关闭 影响哪些函数和参数，至少写6个？
	system()函数
	mail()  在安全模式下，第五个参数被屏蔽
	set_time_limit() 在安全模式下不起作用。 
 	max_execution_time 在安全模式下不起作用。 
	safe_mode "0" PHP_INI_SYSTEM   
	safe_mode_gid "0" PHP_INI_SYSTEM 自 PHP 4.1.0 起可用 
	safe_mode_include_dir NULL PHP_INI_SYSTEM 自 PHP 4.1.0 起可用 
	safe_mode_exec_dir "" PHP_INI_SYSTEM   
	safe_mode_allowed_env_vars "PHP_" PHP_INI_SYSTEM   
	safe_mode_protected_env_vars "LD_LIBRARY_PATH" PHP_INI_SYSTEM   
	open_basedir NULL PHP_INI_SYSTEM   
	disable_functions "" 仅 php.ini 自 PHP 4.0.1 起可用 
	disable_classes "" 仅 php.ini 自 PHP 4.3.2 起可用 
	PHP_INI_* 常量的进一步详细说明与定义见 ini_set()。 

22.你了解哪些PHP开源的框架？你用过哪些？
	ThinkPHP,CI,YII,Zend Framework,Laravel

23.PHP开源类库你用过哪些？
	PHPExcel,PHPMailer,Workmen,Doctrine,Pheanstalk,ElasticSearch PHP

24.PHP测试框架有哪些?
	PHPUnit

25.说说LAMP架构运行流程
	L:Linux,操作系统
	A:Apache,首先在服务器上安装了Nginx服务，在Nginx服务器上配置nginx.conf,遇到以.php结尾的文件，交给127.0.0.1:9000端口进行处理(php处理程序的默认端口),在接收到请求以后，按照php的语法进行解析处理请求，请求处理完毕，再返回给nginx服务器，服务器返回到客户端，客户端浏览器下载，加载，渲染，呈现html文档。
	M:MySql,安装Mysql服务,在PHP.ini中把mysql的扩展打开，即可连接mysql服务器，进行数据的操作
	P:PHP,下载PHP版本

27.PHP加速运行的扩展有哪些？
	APC，XCache，eAccelerator 

28.说出几个不同类型的Linux命令
	文件管理命令：ls,ll,pwd,cd,mkdir,rmdir,touch,cp,mv,rm -f,cat,chmod,diff,tail,find,vi/vim
	用户管理命令：
	权限管理命令：
	打包压缩命令：
	关机重启命令：

29.Nginx怎么配置多个虚拟主机？
	配置多个server段，即可配置多个虚拟主机

30.Nginx怎么做负载均衡？
	在nginx.conf中的一个配置文件，upstream段

31.你们在项目开发中有没有做过代码审查？

32.你们团队是怎么做项目开发流程？


33.你知道哪些设计模式？
	23种设计模式

34.你经常做代码重构么？说说你代码重构的体会

35.抓包工具有哪些？(http协议调试代理工具)
	Sniffer,
	wireshark,
	Fiddler(http/https都可以的),
	WinNetCap.WinSock 
	Expert,
	SpyNet 都是当前流行的抓包工具

36.常作思维导图么？
	XMind

37.工作中你们用什么做代码版本控制？说说你们使用GIT的工作流是什么样的？
	Git,SVN

38.用过GitHub么？都用GitHub做过什么？有没有向开源项目贡献过代码？

39.说说GIT和SVN的区别?
	GIT是分布式的，SVN是集中式的

40.说说GIT常用的命令？
	git init 初始化一个git仓库
	git remote -v 查看远端仓库的信息
	git add a.php 添加一个文件到git仓库
	git commit -m "注释信息"
	git status 查看git仓库当前的状态
	git diff a.php 查看文件的修改
	git log 查看提交日志
	git checkout -- file 可以丢弃工作区的修改
	git rm 移除git仓库中的该文件
	git remote rm 移除远端仓库对应的
	git push 推到远程仓库
	git pull 从远程仓库拉取
	git remote add origin git@server-name:path/repo-name.git
	git checkout -b dev  :git checkout命令加上-b参数表示创建并切换，相当于以下两条命令
	git branch dev 创建dev分支
	git checkout dev 切换的dev分支
	git branch 命令会列出所有分支，当前分支前面会标一个*号
	git branch -d dev  删除dev分支
	git merge branch_name 命令用于合并指定分支到当前分支
	git merge  命令用于合并指定分支到当前分支,注意到上面的Fast-forward信息，Git告诉我们，这次合并是“快进模式”，也就是直接把master指向dev的当前提交，所以合并速度非常快
	git log 显示从最近到最远的提交日志
	git push origin branch-name  推送本地分支branch_name到远端origin
	git branch --set-upstream dev origin/dev  指定本地dev分支与远程origin/dev分支的链接
	git config --list 检查已有的配置信息
	git help verb_name 要学习 verb_name 命令可以怎么用
	git commit -a -m 'added new benchmarks', git commit 加上 -a 选项，Git 就会自动把所有已经跟踪过的文件暂,存起来一并提交，从而跳过 git add步骤

41.软件工程开发有哪些模式?
	4种常见的开发模式：
	(1)串行式开发模式
		典型的是"瀑布式开发模式",他描述了一个整体的软件生命周期,每一阶段层层推近，缺点是，每一阶段的任务之间有严格的先后顺序，导致效率会很慢。当需求变更时，必须停下来去处理并发。文档会有很多，因为它是一条线的工作方式，就必须有大量的文档进行辅助工作。
	(2)迭代式开发模式
		典型代表是"螺旋式开发模式",将软件生命周期的分析和设计阶段分解为几个小的阶段，增加了原型和风险分析两个阶段，它认识到一个事实，即常常需要重新进入项目的每个阶段，并通过原型让客户也参与到整个项目。因为它增加了阶段，所以复杂度也有所增加,难于安排进度，难于进行分析
	(3)增量式开发模式
		增量式开发模式要求将项目的产品作为多个版本进行发布，而每个版本都包含优先级不同的需求。 　　	通常增量式开发模式只作为一种辅助的开发模式来工作，与串行和迭代式开发模式都可以搭配一起进行。 　　缺点在于需要客户的“耐心”为基础（通常客户是这么想的，既然这个版本都已经完成了，另一恐怕不要多久）。它的优点在于能降低风险和提高效率。 　　缺点在于需要客户的“耐心”为基础（通常客户是这么想的，既然这个版本都已经完成了，另一恐怕不要多久）。 　
	(4)并行使开发模式
		并行式开发模式将项目分成多个“线程”同时进行。 　　并行式开发模式的作法需要以下几步： 　　a.给出构架建模的方案。 　　b.给出开发指南、需求文档指南、设计文档指南和编码规范以及各种一致性约定。 　　c.团队沟通的方式。 　　d.软件配置管理的过程。 　　它的缺点： 　　a.由于是并行的开发，所以人力和物力就要分配得相当到位，否则每个并行的线程将不能在预期的时间范围内完成。 　　b.团队成员的沟通也必须有良好的方式，否则每个并行的线程间一旦有交互的地方，将无法控制风险。 　　c.同事更新同一份文档非常多，配置管理将变得困难。

42.软件系统开发的流程是怎样的？
	可行性研究--需求分析--概要设计--详细设计--编码与实现--功能测试--部署--运行维护

43.MySQL有哪些存储引擎？它们之间有什么区别？
	InnoDB 行锁,支持事务
	MyISAM 表锁，不支持事务
	Memory
	Archive
	NDB

44.如何做Mysql的优化?
    Mysql如何优化(为知笔记)

45.如何做Mysql的慢查询？
	Mysql慢查询(为知笔记)
	show variables like '%slow%'; 查看是否开启慢查询
	打开慢查询日志。修改MySQL的配置文件my.cn一般是在/etc目录下面，加上下面三行配置后重启MySQL。
	slow_query_log = ON
	slow_launch_time = 2
	slow_query_log_file = /usr/local/mysql/data/slow_query.log
	也可以在终端通过设置全局变量来打开慢查询日志：
	set  @@global.slow_query_log = ON;
	保存慢查询日志到表中
	MySQL支持将慢查询日志保存到mysql.slow_log这张表中。通过@@global.log_output可以设置默认为TABLE，FILE和TABLE只能同时使用一个。
	set @@global.log_output='TABLE';
	
46.说说系统的RBAC数据库设计
	基于角色的权限管理,权限跟角色挂钩，角色跟人员挂钩。

47.说说电子商城的数据库设计	
	yun_shop

48.说说自己的数据库表使用体会？
	优化数据库配置；横向，纵向分表；在冗余与查询之间权衡；开启慢查询；合理使用数据库引起；常用查询字段上加索引

49.说说Mysql如何做主从备份？

网络协议
1. Http的get和post请求有什么区别？
	get:参数直接带在url后面,有数据量的限制1024  $_GET
	post:一般用于提交表单,没有数据量的限制 $_POST

2. HTTP协议的状态消息都有哪些?说出常见的状态码的含义
	HTTP状态码(为知笔记)

3. 说说在浏览器的输入URL回车之后发生了哪些事情(越详细越好)？
	当你输入一个网址后回车，实际会发生什么?(为知笔记,还需要补全)

4. TCP/IP有哪几层协议？说说每层协议的大概作用？
	简单说 分四层，从下到上： 主机-网络层（接口层）、网络层、传输层、应用层

5. HTTP1,HTTP2，SPDY,HTTPS的区别？
	(1)请求和响应头的大小(HTTP2)
	(2)响应消息的大小(HTTP2)
	(3)TCP连接数和页面加载时的SSL握手请求数


其他问题：
1. 谈谈你的优点和缺点？
2. WEB产品开发流程是怎样的？
3. 你有什么问题要问我的？
4. 你最近查看的影响深刻的技术文章是什么？
5. 你常去的技术网站，博客站点都有哪些？
6. 你遇到过比较难的技术问题是？你是如何解决的？
7. 你在现在的团队处于什么样的角色，起到了什么明显的作用？
8. 介绍一个你最得意的作品吧？
9. 能谈谈你未来3，5年给自己的规划吗？
10. 你了解最近火热的新技术有哪些么？对哪些比较感兴趣？
11. 你用到了哪些技术？
12. 你开发过哪些项目，在里面使用过哪些技术？
13. 你看过哪些经典的书籍？你接下来还准备阅读哪些书籍？
14. 做一个项目时，你使用过哪些有用的工具？
15. 你有什么问题要问我的？
	1.公司的福利待遇情况是怎样的（薪资，餐补，五险一金，提薪机制，年终奖是多少？有没有项目奖金？通讯补助，住房补贴？交通补助？平时水果零食？弹性工作？生日礼包？结婚礼包？全勤奖？培训？出国机会？）？
	2.我来了主要参与什么工作的开发？公司PHP开发人员规模是怎么样的？
	3.公司现在项目开发流程是什么样的？
	4.公司加班的话，有没有加班费？调休？
	

